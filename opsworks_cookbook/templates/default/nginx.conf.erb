#user  <%= @nginx['user'] %>;
worker_processes  <%= @nginx['worker_processes'] %>;

#worker_rlimit_nofile  <%= @nginx['worker_rlimit_nofile'] %>;

#<% if @nginx['error_log'] %>
#error_log   <%= @nginx['error_log'] %>;
#<% end %>

events {
    worker_connections  <%= @nginx['worker_connections'] %>;
}


http {
    passenger_root <%= @passenger_root %>;
    passenger_ruby /usr/bin/ruby2.0;
    # passenger_ruby /usr/local/rvm/wrappers/default/ruby;
    passenger_max_pool_size <%= @passenger['max_pool_size'] %>;
    passenger_min_instances <%= @passenger['min_instances'] %>;
    #passenger_nodejs <%= @nodejs_root %>;
    passenger_nodejs /usr/local/bin/node;
    # passenger_pool_idle_time <%= @passenger['pool_idle_time'] %>;
    # passenger_max_instances_per_app <%= @passenger['max_instances_per_app'] %>;
    # <% if @passenger['rolling_restarts'] %>
    # passenger_rolling_restarts <%= @passenger['rolling_restarts'] %>;
    # <% end %>

    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    <% if @nginx['access_log'] %>
    log_format elb_log '$proxy_protocol_addr - $remote_user [$time_local] ' '"$request" $status $body_bytes_sent "$http_referer" ' '"$http_user_agent"';
    access_log <%= @nginx['access_log'] %> elb_log;
    <% end %>

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;
    #keepalive_requests 100000;
    #server_tokens off;

    gzip  on;
    gzip_disable "msie6";
    gzip_types text/css application/json application/x-javascript text/javascript application/javascript;

    server {
        listen 80;
        server_name localhost;
        location / {
            root   html;
            rewrite ^(.*)$ https://$host$1 permanent;
            index  index.html index.htm;
        }
    }
    
    server {
        # proxy_protocol require ELB to have proxy_protocol enabled -- this is for improved WebSocket/socket.io performance/support
        # http://www.raweng.com/blog/2014/11/11/websockets-on-aws-elb/
        listen       81;
        server_name  localhost;

        add_header X-XSS-Protection "1; mode=block";
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-Permitted-Cross-Domain-Policies master-only;
        add_header Referrer-Policy same-origin;
        add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains; preload';

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        root  /var/www/client/dist;
        passenger_enabled on;
        passenger_startup_file ../server/build/server/src/server.js;
        passenger_app_type node;

        # Sticky sessions if we use socket.io/long polling
        passenger_sticky_sessions on;

        location = / {
            if (-f /var/maintenance/index.html) {
                return 503;
            }
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 504  /50x.html;
        error_page 503 /under_maintenance.html;

        # location /under_maintenance.html {
        #         root /var/www/maintenance;
        #         internal;
        # }
        location = @maintenance {
            # root   html;
            try_files /var/www/maintenance/index.html /opt/nginx/html/50x.html =503;
        }
        location = /50x.html {
            root   html;
        }
        location /robots.txt {
            return 200 "User-agent: BLEXBot\nDisallow: /\n";
        }
    }

}